read.csv("/Volumes/Resource1/scRNA_data/BulkData/HGSC_TGCA/icgc-dataset-1643507265966/donor.tsv")
library(keras)
# Then, use the install_tensorflow() function to install TensorFlow.
library(tensorflow)
# install_tensorflow(envname = "r-reticulate")
install_tensorflow(method = "virtualenv",envname = "lab_python3_env")
# You can confirm that the installation succeeded with:
library(tensorflow)
tf$constant("Hello Tensorflow!")
?virtualenv_create
library(reticulate)
virtualenv_install(envname = "lab_python3_env")
virtualenv_exists(envname = "lab_python3_env")
virtualenv_python(envname = "lab_python3_env")
library(keras)
# You can confirm that the installation succeeded with:
library(tensorflow)
tf$constant("Hello Tensorflow!")
install_tensorflow(envname = "r-reticulate")
tf$constant("Hello Tensorflow!")
install.packages("tensorflow")
install.packages("tensorflow")
install.packages("tensorflow")
install.packages("tensorflow")
install.packages("tensorflow")
library(reticulate)
path_to_python <- "/usr/local/bin/python3.9"
virtualenv_create("r-reticulate", python = path_to_python)
library(tensorflow)
install_tensorflow(envname = "r-reticulate")
library(tensorflow)
tf$constant("Hello Tensorflow!")
use_virtualenv("r-reticulate")
use_virtualenv("lab_python3_env")
library(tensorflow)
tf$constant("Hello Tensorflow!")
install_tensorflow(method = "virtualenv",envname = "lab_python3_env")
use_virtualenv("lab_python3_env")
tf$constant("Hello Tensorflow!")
# install the development version of packages, in case the
# issue is already fixed but not on CRAN yet.
install.packages("remotes")
sprintf("rstudio/%s", c("reticulate", "tensorflow", "keras"))
remotes::install_github(sprintf("rstudio/%s", c("reticulate", "tensorflow", "keras")))
reticulate::miniconda_uninstall() # start with a blank slate
Sys.getenv()
Sys.getenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS)
Sys.getenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS")
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS="true")
v<-readRDS("/Volumes/Resource1/PerturbSeq/Results/perturbDEGs_HGSC_S1_1to1.rds")
r<-readRDS("/Volumes/ljerby/PerturbSeq/Data/R_data/perturbSeq1_TyknuNK_1to1_processed.rds")
typeof(r$sgRNA)
table(r$sgRNA$num_features)
table(r$labels)
r2<-readRDS("/Volumes/ljerby/PerturbSeq/Data/R_data/perturbSeq1_TyknuNK_25to1.rds")
table(r2$labels)
table(r2$labels,r2$sgRNA[,"num_features"])
r<-readRDS("/Volumes/Resource2/HGSC/Data/R_data/SMI_panel.rds")
r<-readRDS("/Volumes/Resource2/HGSC/Data/R_data/SMI_HGSC_wFrames5K_wSubtypes.rds")
summary(r)
r
r<-readRDS("/Volumes/Resource2/HGSC/Data/R_data/SMI_HGSC_wFrames5K.rds")
libs4HGSC<-c("beanplot","cowplot","Seurat","EBImage","survival","rms","mixtools","MASS","ggplot2",
"nnet","ppcor","ROCR","tsne","gplots","ggpubr","EnhancedVolcano","plyr","reshape2","plotrix","stats", "Matrix",
"Rtsne","lmerTest","devtools","gplots","heatmap3","e1071","openxlsx","RColorBrewer","heatmap3","UpSetR")
for(x in libs4HGSC){
print(x)
library(package = x)
}
library(x)
library(x,character.only = T)
for(x in libs4HGSC){
library(x,character.only = T)
}
laply(libs4HGSC,function(x) library(x,character.only = T))
v<-laply(libs4HGSC,function(x) library(x,character.only = T))
v
libs4HGSC<-c("beanplot","cowplot","Seurat","EBImage","survival","rms","mixtools","MASS","ggplot2",
"nnet","ppcor","ROCR","tsne","gplots","ggpubr","EnhancedVolcano","plyr","reshape2","plotrix","stats", "Matrix",
"Rtsne","lmerTest","devtools","gplots","heatmap3","e1071","openxlsx","RColorBrewer","heatmap3","UpSetR")
attach("mtcars")
source_url("https://raw.githubusercontent.com/obigriffith/biostar-tutorials/master/Heatmaps/heatmap.3.R")
v<-laply(libs4HGSC,function(x) library(x,character.only = T))
v<-lapply(libs4HGSC,function(x) library(x,character.only = T))
attach("mtcars")
source_url("https://raw.githubusercontent.com/obigriffith/biostar-tutorials/master/Heatmaps/heatmap.3.R")
attach("mtcars")
libs4HGSC<-c("beanplot","cowplot","Seurat","EBImage","survival","rms","mixtools","MASS","ggplot2","mtcars",
"nnet","ppcor","ROCR","tsne","gplots","ggpubr","EnhancedVolcano","plyr","reshape2","plotrix","stats", "Matrix",
"Rtsne","lmerTest","devtools","gplots","heatmap3","e1071","openxlsx","RColorBrewer","heatmap3","UpSetR")
v<-lapply(libs4HGSC,function(x) library(x,character.only = T))
source("~/Desktop/GitHub/HGSC_SpatialPerturbational/Code/HGSCgit_main.R")
source("~/Desktop/GitHub/HGSC_SpatialPerturbational/Code/HGSCgit_main.R")
rm(list=ls())
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE",force = T)
library(DIALOGUE)
DIALOGUE::DIALOGUE.run
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE",force = T)
library(DIALOGUE)
DIALOGUE::DIALOGUE.run
library(DIALOGUE)
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE",force = T)
library(DIALOGUE)
rm(list=setdiff(ls(),"rA"))
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE",force = T)
library(DIALOGUE)
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE",force = T)
library(DIALOGUE)
DIALOGUE::DIALOGUE.run
DIALOGUE.run
source("~/Desktop/R_code/2_backup/V3/MS_Dialogue/DIALOGUE_reproduce_2023.R")
results.dir <- "~/Desktop/SMI/"
cell.types<-c("fibroblast","macrophage","T.CD4")
rA<-readRDS("~/Desktop/R_code/6_Github/DIALOGUE/Data/DLG_SMI.input.rds")
param<-list(seed1 = 1234,averaging.function = colMeans,center.flag = T,extra.sparse = F,
conf = c("cellQ"),covar = c("cellQ"),#c("cellQ","tme.qc"),
results.dir = results.dir)
rA1<-lapply(rA, function(r) {r@extra.scores$XAv<-NULL;return(r)})
param<-list(seed1 = 1234,averaging.function = colMeans,center.flag = T,extra.sparse = F,
conf = c("cellQ"),covar = c("cellQ"),# ,"tme.qc"
results.dir = "~/Desktop/DLG/")
R1<-DIALOGUE::DIALOGUE.run(rA = rA1,main = "SMI.recomp50",k = 3,
results.dir = param$results.dir,
plot.flag = F,conf = param$conf,n.genes = 50,
covar = param$conf,averaging.function = param$averaging.function,
center.flag = param$center.flag,PMD2 = F,find.genes = T,
extra.sparse = param$extra.sparse,spatial.flag = T)
X<-read.xlsx("~/Downloads/41587_2022_1288_MOESM2_ESM.xlsx",startRow = 2,sheet = 3)
library(DIALOGUE)
source("~/Desktop/R_code/6_Github/JerbyLab/JerbyLab_package.R")
X<-read.xlsx("~/Downloads/41587_2022_1288_MOESM2_ESM.xlsx",startRow = 2,sheet = 3)
sig1<-split(X$Genes[X$MCP=="MCP1"],X$Cell.type[X$MCP=="MCP1"])
sig2<-split(X$Genes[X$MCP=="MCP2"],X$Cell.type[X$MCP=="MCP2"])
sig3<-split(X$Genes[X$MCP=="MCP3"],X$Cell.type[X$MCP=="MCP3"])
X<-read.xlsx("~/Downloads/41587_2022_1288_MOESM2_ESM.xlsx",startRow = 2,sheet = 3)
library(openxlsx)
X<-read.xlsx("~/Downloads/41587_2022_1288_MOESM2_ESM.xlsx",startRow = 2,sheet = 3)
sig1<-split(X$Genes[X$MCP=="MCP1"],X$Cell.type[X$MCP=="MCP1"])
sig2<-split(X$Genes[X$MCP=="MCP2"],X$Cell.type[X$MCP=="MCP2"])
sig3<-split(X$Genes[X$MCP=="MCP3"],X$Cell.type[X$MCP=="MCP3"])
summary(R1$MCPs$MCP1)
summary(sig1)
sig.comp(sig1,R1$MCPs2$MCP1)
sig.comp(sig1,R1$MCPs$MCP1)
sig.comp(sig1,R1$MCPs.full$MCP1)
sig.comp(sig1,R1$MCPs$MCP1)
sig.comp(sig2,R1$MCPs$MCP2)
sig.comp(sig3,R1$MCPs$MCP3)
sig.comp(sig1,R1$MCPs$MCP1)
sig.comp(sig2,R1$MCPs$MCP2)
sig.comp(sig3,R1$MCPs$MCP3)
R1$param
R1$param$n.genes
R<-readRDS("~/Desktop/DLG/DLG.full.output_SMI.recomp50.rds")
summary(R)
View(R$cca$ws$fibroblast)
R0<-readRDS("~/Desktop/R_code/6_Github/DIALOGUE/Data/DLG.full.output_SMI.final.rds")
View(R0$cca$ws$fibroblast)
View(R1$scores$fibroblast)
View(R0$scores$fibroblast)
View(R0$cca.scores)
names(R)
names(R0)
laply(names(R),function(x) identical(R[[x]],R0[[x]]))
names(R)[laply(names(R),function(x) identical(R[[x]],R0[[x]]))]
names(R)[!laply(names(R),function(x) identical(R[[x]],R0[[x]]))]
Routput<-R1
R1<-R0
sig.comp(sig1,R1$MCPs2$MCP1)
sig.comp(sig2,R1$MCPs2$MCP2)
sig.comp(sig3,R1$MCPs2$MCP3)
names(R)[!laply(names(R),function(x) identical(R[[x]],R0[[x]]))]
names(R)[laply(names(R),function(x) identical(R[[x]],R0[[x]]))]
summary(R$cca.sig)
summary(R$cca.sig$fibroblast)
R$covar
R1$covar
R0$covar
Routput$covar
names(R)[laply(names(R),function(x) identical(R[[x]],R0[[x]]))]
names(R)[!laply(names(R),function(x) identical(R[[x]],R0[[x]]))]
param<-list(seed1 = 1234,averaging.function = colMeans,center.flag = T,extra.sparse = F,
conf = c("cellQ"),covar = c("cellQ","tme.qc"),
results.dir = "~/Desktop/DLG/")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_install.R")
source("~/Desktop/GitHub/DIALOGUE/R/DIALOGUE.cell.type.R")
source("~/Desktop/GitHub/DIALOGUE/R/DIALOGUE.util.R")
source("~/Desktop/GitHub/DIALOGUE/R/DIALOGUE.plot.R")
source("~/Desktop/R_code/6_Github/DIALOGUE/DIALOGUE.main_Github_param_08062023.R")
file.edit("~/Desktop/R_code/6_Github/DIALOGUE/DIALOGUE.main_Github_param_08062023.R")
rA<-readRDS(file = DLG.get.file("Data/DLG.input_LungCancer.SMI.rds"))
param<-DLG.get.param(k = 3,seed1 = 1234,
frm = "y ~ (1 | fov:slides) + (1 | slides) + x + cellQ + tme.qc",
averaging.function = colMeans,
center.flag = T,extra.sparse = F,
conf = c("cellQ"),covar = c("cellQ","tme.qc"),
results.dir = "/Volumes/Resource2/DIALOGUE/Reproduce2023/",
plot.flag = F,n.genes = 50,
PMD2 = F,spatial.flag = T)
debugSource("~/Desktop/R_code/6_Github/DIALOGUE/DIALOGUE.main_Github_param_08062023.R")
param$single.BH
param<-DLG.get.param(k = 3,seed1 = 1234,
frm = "y ~ (1 | fov:slides) + (1 | slides) + x + cellQ + tme.qc",
averaging.function = colMeans,
center.flag = T,extra.sparse = F,single.BH = T,
conf = c("cellQ"),covar = c("cellQ","tme.qc"),
results.dir = "/Volumes/Resource2/DIALOGUE/Reproduce2023/",
plot.flag = F,n.genes = 50,
PMD2 = F,spatial.flag = T)
param$frm <- "y ~ (1 | slides) + x + cellQ + tme.qc"
R<-DIALOGUE.run(rA = rA,main = "SMI_slides",param = param)
library(DIALOGUE)
source("~/Desktop/R_code/6_Github/DIALOGUE/DIALOGUE.main_Github_param_08062023.R")
param$frm <- "y ~ (1 | slides) + x + cellQ + tme.qc"
param
R<-DIALOGUE.run(rA = rA,main = "SMI_slides",param = param)
R<-readRDS("/Volumes/Resource2/DIALOGUE/Reproduce2023/DLG.full.output_SMI_slides.rds")
R1<-R
library(openxlsx)
X<-read.xlsx("~/Downloads/41587_2022_1288_MOESM2_ESM.xlsx",startRow = 2,sheet = 3)
sig1<-split(X$Genes[X$MCP=="MCP1"],X$Cell.type[X$MCP=="MCP1"])
sig2<-split(X$Genes[X$MCP=="MCP2"],X$Cell.type[X$MCP=="MCP2"])
sig3<-split(X$Genes[X$MCP=="MCP3"],X$Cell.type[X$MCP=="MCP3"])
summary(R1$MCPs$MCP1)
summary(sig1)
sig.comp(sig1,R1$MCPs2$MCP1)
source("~/Desktop/R_code/6_Github/JerbyLab/JerbyLab_package.R")
sig.comp(sig1,R1$MCPs2$MCP1)
sig.comp(sig1,R1$MCPs$MCP1)
R<-readRDS("/Volumes/Resource2/DIALOGUE/Reproduce2023/DLG.full.output_SMI_fovs.rds")
sig.comp(sig1,R1$MCPs$MCP1)
R<-readRDS("/Volumes/Resource2/DIALOGUE/Reproduce2023/DLG.full.output_SMI_slides.rds")
sig.comp(sig1,R1$MCPs$MCP1)
R1<-readRDS("/Volumes/Resource2/DIALOGUE/Reproduce2023/DLG.full.output_SMI_slides.rds")
R2<-readRDS("/Volumes/Resource2/DIALOGUE/Reproduce2023/DLG.full.output_SMI_fovs.rds")
sig.comp(sig1,R1$MCPs$MCP1)
sig.comp(R2$MCPs$MCP1,R1$MCPs$MCP1)
R3<-readRDS("/Volumes/Resource2/DIALOGUE/Reproduce2023/DLG.full.output_SMI.recompFrm.rds")
sig.comp(sig1,R3$MCPs$MCP1)
R3<-readRDS("/Volumes/Resource2/DIALOGUE/Reproduce2023/DLG.full.output_SMI.recompFrm1.rds")
sig.comp(sig1,R3$MCPs$MCP1)
R3<-readRDS("/Volumes/Resource2/DIALOGUE/Reproduce2023/DLG.full.output_SMI.recompFrm2.rds")
sig.comp(sig1,R3$MCPs$MCP1)
R3<-readRDS("/Volumes/Resource2/DIALOGUE/Reproduce2023/DLG.full.output_SMI.recompFrm.rds")
sig.comp(sig1,R3$MCPs$MCP1)
sig.comp(sig2,R3$MCPs$MCP2)
R<-R3
X1<-R$gene.pval$fibroblast
View(X1)
setdiff(sig2$fibroblast.down,R$MCPs$MCP2$fibroblast.down)
setdiff(R$MCPs$MCP2$fibroblast.down,sig2$fibroblast.down)
X1<-X1[X1$programF=="MCP2.down"]
X1<-X1[X1$programF=="MCP2.down",]
View(X1[paste0("MCP2.down_",setdiff(R$MCPs$MCP2$fibroblast.down,sig2$fibroblast.down)),])
R$frm
R$cca.gene.cor$fibroblast["CCL5",]
R$cca.gene.cor$fibroblast$R["CCL5",]
R$cca.gene.cor$fibroblast$P["CCL5",]
rm(list=ls())
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE")
library(DIALOGUE)
rA<-readRDS(file = DLG.get.file("Data/DLG.input_LungCancer.SMI.rds"))
library(DIALOGUE)
DIALOGUE::DLG.get.param
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_install.R")
rA<-readRDS(file = DLG.get.file("Data/DLG.input_LungCancer.SMI.rds"))
param<-DLG.get.param(k = 3,seed1 = 1234,
frm = "y ~ (1 | fov:slides) + (1 | slides) + x + cellQ + tme.qc",
averaging.function = colMeans,
center.flag = T,extra.sparse = F,
conf = c("cellQ"),covar = c("cellQ","tme.qc"),
results.dir = DLG.get.file("/Results/"),
plot.flag = F,n.genes = 50,
PMD2 = F,spatial.flag = T)
R<-DIALOGUE.run(rA = rA1,main = "SMI",param = param)
R<-DIALOGUE.run(rA = rA,main = "SMI",param = param)
rA<-DLG_add.XAv(rA)
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
rA<-DLG_add.XAv(rA)
source("~/Desktop/GitHub/DIALOGUE/R/DIALOGUE.util.R")
rA<-DLG_add.XAv(rA)
saveRDS(rA,DLG.get.file("Data/DLG.input_LungCancer.SMI.rds"))
rm(list=setdiff(ls(),"rA"))
library(DIALOGUE)
param<-DLG.get.param(k = 3,seed1 = 1234,
frm = "y ~ (1 | fov:slides) + (1 | slides) + x + cellQ + tme.qc",
averaging.function = colMeans,
center.flag = T,extra.sparse = F,
conf = c("cellQ"),covar = c("cellQ","tme.qc"),
results.dir = DLG.get.file("/Results/"),
plot.flag = F,n.genes = 50,
PMD2 = F,spatial.flag = T)
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_install.R")
param<-DLG.get.param(k = 3,seed1 = 1234,
frm = "y ~ (1 | fov:slides) + (1 | slides) + x + cellQ + tme.qc",
averaging.function = colMeans,
center.flag = T,extra.sparse = F,
conf = c("cellQ"),covar = c("cellQ","tme.qc"),
results.dir = DLG.get.file("/Results/"),
plot.flag = F,n.genes = 50,
PMD2 = F,spatial.flag = T)
R<-DIALOGUE.run(rA = rA,main = "SMI",param = param)
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
R<-DIALOGUE.run(rA = rA,main = "LungCancer.SMI",param = param)
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE",force = T)
library(DIALOGUE)
# Run a toy example
rA<-readRDS(system.file("Data", "test.example.rds", package = "DIALOGUE"))
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_install.R")
param<-DLG.get.param(k = 2,results.dir = DLG.get.file("/Results/"),
conf = "cellQ",pheno = "pathology")
param<-DLG.get.param(k = 2,results.dir = DLG.get.file("/Results/"),
conf = "cellQ",pheno = "pathology")
R<-DIALOGUE.run(rA = rA,main = "toyExample",param = param,plot.flag = T)
file.exists(param$results.dir)
R<-DIALOGUE.run(rA = rA,main = "toyExample",param = param,plot.flag = T)
library(UpSetR)
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE")
library(DIALOGUE)
DIALOGUE::DIALOGUE.run
DIALOGUE.run
upset(fromList(sig[5:8]), order.by = "freq")
?upset
# Run a toy example
rA<-readRDS(system.file("Data", "test.example.rds", package = "DIALOGUE"))
param<-DLG.get.param(k = 2,results.dir = DLG.get.file("/Results/"),
conf = "cellQ",pheno = "pathology")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_install.R")
param<-DLG.get.param(k = 2,results.dir = DLG.get.file("/Results/"),
conf = "cellQ",pheno = "pathology")
assertthat::assert_that(file.exists(param$results.dir))
R<-DIALOGUE.run(rA = rA,main = "toyExample",param = param,plot.flag = T)
R<-DIALOGUE.run(rA = rA,main = "toyExample",param = param,plot.flag = F)
DIALOGUE.run
DIALOGUE.plot(R, results.dir = param$results.dir, pheno = param$pheno)
R$MCPs$MCP1
R$MCPs$MCP2
R$MCPs$MCP3
laply(R$MCPs,is.null)
summary(R$MCPs)
summary(R$MCPs$MCP1)
summary(unlist(R$MCPs,recursive = F))
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE")
library(DIALOGUE)
DIALOGUE::DIALOGUE.run
DIALOGUE.run
# Run a toy example
rA<-readRDS(system.file("Data", "test.example.rds", package = "DIALOGUE"))
param<-DLG.get.param(k = 2,results.dir = DLG.get.file("/Results/"),
conf = "cellQ",pheno = "pathology",n.genes = 100)
assertthat::assert_that(file.exists(param$results.dir))
param<-DLG.get.param(k = 2,results.dir = DLG.get.file("/Results/"),
conf = "cellQ",pheno = "pathology",n.genes = 100)
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_install.R")
param<-DLG.get.param(k = 2,results.dir = DLG.get.file("/Results/"),
conf = "cellQ",pheno = "pathology",n.genes = 100)
assertthat::assert_that(file.exists(param$results.dir))
R<-DIALOGUE.run(rA = rA,main = "toyExample",param = param,plot.flag = T)
R<-readRDS("/Volumes/Resource2/DIALOGUE_GitHub/Results/DLG.output_toyExample.rds")
DIALOGUE.plot(R, results.dir = param$results.dir, pheno = param$pheno)
debugSource("~/Desktop/GitHub/DIALOGUE/R/DIALOGUE.plot.R")
p<-lapply(names(R$MCPs[laply(R$MCPs,!is.null)]), function(x){
sig<-R$MCPs[[x]]
names(sig)<-paste(x,names(sig),sep = ".")
p1<-list(upset(fromList(sig[grepl("up",names(sig))]), order.by = "freq"),
upset(fromList(sig[grepl("down",names(sig))]), order.by = "freq"))
return(p1)
})
names(R$MCPs[laply(R$MCPs,!is.null)])
laply(R$MCPs,!is.null)
laply(R$MCPs,is.null)
source("~/Desktop/GitHub/DIALOGUE/R/DIALOGUE.plot.R")
DIALOGUE.plot(R, results.dir = param$results.dir, pheno = param$pheno)
p<-lapply(names(R$MCPs[!laply(R$MCPs,is.null)]), function(x){
sig<-R$MCPs[[x]]
names(sig)<-paste(x,names(sig),sep = ".")
p1<-list(upset(fromList(sig[grepl("up",names(sig))]), order.by = "freq"),
upset(fromList(sig[grepl("down",names(sig))]), order.by = "freq"))
return(p1)
})
print(p)
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE")
source("~/Desktop/GitHub/DIALOGUE/R/DIALOGUE.plot.R")
library(DIALOGUE)
# Run a toy example
rA<-readRDS(system.file("Data", "test.example.rds", package = "DIALOGUE"))
param<-DLG.get.param(k = 2,results.dir = DLG.get.file("/Results/"),
conf = "cellQ",pheno = "pathology",n.genes = 100)
assertthat::assert_that(file.exists(param$results.dir))
R<-DIALOGUE.run(rA = rA,main = "toyExample",param = param,plot.flag = T)
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_install.R")
param<-DLG.get.param(k = 2,results.dir = DLG.get.file("/Results/"),
conf = "cellQ",pheno = "pathology",n.genes = 100)
param
param$n.genes
assertthat::assert_that(file.exists(param$results.dir))
R<-DIALOGUE.run(rA = rA,main = "toyExample",param = param,plot.flag = T)
R<-DIALOGUE.run(rA = rA,main = "toyExample",param = param,plot.flag = T)
summary(unlist(R$MCPs,recursive = F))
R$MCPs$MCP1$A.down
print(round(R$phenoZ,2))
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE")
rA$A@metadata
head(rA$A@metadata)
head(rA$A@metadata[,-1])
head(rA$A@metadata[,c("cellQ","gender","location","pathology")])
system.file("Data", "test.example.rds", package = "DIALOGUE")
?system.file
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
library(DIALOGUE)
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
rA<-readRDS(file = DLG.get.file("Data/DLG.input_LungCancer.SMI.rds"))
param<-DLG.get.param(k = 3,seed1 = 1234,
frm = "y ~ (1 | fov:slides) + (1 | slides) + x + cellQ + tme.qc",
averaging.function = colMeans,
center.flag = T,extra.sparse = F,
conf = c("cellQ"),covar = c("cellQ","tme.qc"),
results.dir = DLG.get.file("/Results/"),
plot.flag = F,n.genes = 50,
PMD2 = F,spatial.flag = T)
R<-DIALOGUE.run(rA = rA,main = "LungCancer.SMI",param = param)
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
tictoc::tic()
param<-DLG.get.param(k = 3,seed1 = 1234,
frm = "y ~ (1 | fov:slides) + (1 | slides) + x + cellQ + tme.qc",
averaging.function = colMeans,
center.flag = T,extra.sparse = F,
conf = c("cellQ"),covar = c("cellQ","tme.qc"),
results.dir = DLG.get.file("/Results/"),
plot.flag = F,n.genes = 50,
PMD2 = F,spatial.flag = T)
R<-DIALOGUE.run(rA = rA,main = "LungCancer.SMI",param = param)
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE")
library(DIALOGUE)
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
rA<-readRDS(file = DLG.get.file("Data/DLG.input_LungCancer.SMI.rds"))
R<-readRDS(DLG.get.file("Results/DIALOGUE1_LungCancer.SMI.rds"))
R$scores<-lapply(R$cell.types,function(x) cbind.data.frame(R$cca.scores[[x]],rA[[x]]@metadata))
names(R$scores)<-R$cell.types
print("Reproducing Figure 3 from (Jerby and Regev, NBT 2022).")
p1<-DLG_LungCancer.SMI.subplots(R,slide1 = 'Lung13',n.plots = 4,q1 = 0.9,MCPs = 1:2,D = -1,
fileName = DLG.get.file("/Figures/Figure3_Lung13.pdf"))
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
p1<-DLG_LungCancer.SMI.subplots(R,slide1 = 'Lung13',n.plots = 4,q1 = 0.9,MCPs = 1:2,D = -1,
fileName = DLG.get.file("/Figures/Figure3_Lung13.pdf"))
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
p1<-DLG_LungCancer.SMI.subplots(R,slide1 = 'Lung13',n.plots = 4,q1 = 0.9,MCPs = 1:2,D = -1,
fileName = DLG.get.file("/Figures/Figure3_Lung13.pdf"))
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
p1<-DLG_LungCancer.SMI.subplots(R,slide1 = 'Lung13',n.plots = 4,q1 = 0.9,MCPs = 1:2,D = -1,
fileName = DLG.get.file("/Figures/Figure3_Lung13.pdf"))
add.n.of.samples<-function(l,n.flag = T,sep = " "){
num.samples<-table(l)
idx<-match(l,names(num.samples))
if(n.flag){
l<-paste0(l,sep,"(n = ",num.samples[idx],")")
}else{
l<-paste0(l,sep,"(",num.samples[idx],")")
}
return(l)
}
p1<-DLG_LungCancer.SMI.subplots(R,slide1 = 'Lung13',n.plots = 4,q1 = 0.9,MCPs = 1:2,D = -1,
fileName = DLG.get.file("/Figures/Figure3_Lung13.pdf"))
get.strsplit<-function(v,sep,idx){
v<-as.character(v)
vi<-laply(strsplit(v,split = sep,fixed = T),function(x) x[idx])
return(vi)
}
p1<-DLG_LungCancer.SMI.subplots(R,slide1 = 'Lung13',n.plots = 4,q1 = 0.9,MCPs = 1:2,D = -1,
fileName = DLG.get.file("/Figures/Figure3_Lung13.pdf"))
p1<-DLG_LungCancer.SMI.subplots(R,slide1 = 'Lung13',n.plots = 4,q1 = 0.9,MCPs = 1:2,D = -1,
fileName = DLG.get.file("/Figures/Figure3_Lung13.pdf"))
cap.mat<-function(M,cap = 0.01,MARGIN = 1){
Z<-apply(M,MARGIN = MARGIN,function(x){
q9<-quantile(x,1-cap)
q1<-quantile(x,cap)
x[x>q9]<-q9;x[x<q1]<-q1
return(x)
})
if(MARGIN==1){Z<-t(Z)}
return(Z)
}
p1<-DLG_LungCancer.SMI.subplots(R,slide1 = 'Lung13',n.plots = 4,q1 = 0.9,MCPs = 1:2,D = -1,
fileName = DLG.get.file("/Figures/Figure3_Lung13.pdf"))
call.plot.multilabels<-function(X,labels,main = NULL,xlab = "UMAP1",ylab="UMAP2",add.N = F,
pch = 16, cex = 0.3, cex.axis = 0.6,set.flag = F){
laply(1:ncol(labels),function(i){
call.plot(X,labels = labels[,i],
main = ifelse(is.null(main),colnames(labels)[i],
paste(main,colnames(labels)[i],sep = ":")),
xlab = xlab,ylab = ylab,pch = pch,cex.axis = cex.axis,cex = cex,
set.flag = set.flag,add.N = add.N)
return(i)})
}
p1<-DLG_LungCancer.SMI.subplots(R,slide1 = 'Lung13',n.plots = 4,q1 = 0.9,MCPs = 1:2,D = -1,
fileName = DLG.get.file("/Figures/Figure3_Lung13.pdf"))
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
p1<-DLG_LungCancer.SMI.subplots(R,slide1 = 'Lung13',n.plots = 4,q1 = 0.9,MCPs = 1:2,D = -1,
fileName = DLG.get.file("/Figures/Figure3_Lung13.pdf"))
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
source("~/Desktop/R_code/6_Github/DIALOGUE/DLG_repro_2023_SMI.R")
devtools::install_github(repo = "https://github.com/livnatje/DIALOGUE")
setwd("~/Desktop/GitHub/DIALOGUE/R/")
devtools::document()
